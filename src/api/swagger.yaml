swagger: "2.0"
info:
  description: "Allows DNS management"
  version: "1.0.0"
  title: "DNS Api"
  contact:
    email: "geoff.rich@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api"
schemes:
- "http"
paths:
  /config:
    get:
      summary: "Get current configuration"
      operationId: "getConfig"
      responses:
        "200":
          description: "DNS server configuration"
          schema:
            $ref: "#/definitions/Configuration"
      x-swagger-router-controller: "Configuration"
    put:
      summary: "Modify current configuration"
      operationId: "setConfig"
      parameters:
        - name: body
          in: body
          description: "Configuration settings to change"
          required: true
          schema:
            $ref: "#/definitions/Configuration"
      responses:
        "200":
          description: "OK message"
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-swagger-router-controller: "Configuration"
  /zones:
    get:
      summary: "Get all dns zones"
      operationId: "getAllZones"
      responses:
        "200":
          description: "A list of all DNS zones"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Zone"
      x-swagger-router-controller: "Zones"
    post:
      summary: "Add a single zone"
      operationId: "addZone"
      parameters:
        - name: body
          in: body
          description: "Record to add"
          required: true
          schema:
            $ref: "#/definitions/NewZone"
      responses:
        "200":
          description: OK message
          schema:
            $ref: "#/definitions/GeneralResponse"
      x-swagger-router-controller: "Zones"
    put:
      summary: "Set a single zone"
      operationId: "setZone"
      parameters:
        - name: body
          in: body
          description: "Record to set values to"
          required: true
          schema:
            $ref: "#/definitions/Zone"
      responses:
        "200":
          description: "OK message"
          schema:
            $ref: "#/definitions/GeneralResponse"
      x-swagger-router-controller: "Zones"
  /zones/{id}:
    get:
      summary: "Return a single zone"
      operationId: "getZoneById"
      parameters:
        - name: id
          in: path
          description: "ID of the zone to fetch"
          required: true
          type: string
      responses:
        "200":
          description: "A single zone"
          schema:
            $ref: "#/definitions/Zone"
        "404":
          description: "Zone not found"
      x-swagger-router-controller: "Zones"
    delete:
      summary: "Delete a single zone"
      operationId: "deleteZoneById"
      parameters:
        - name: id
          in: path
          description: "ID of the zone to delete"
          required: true
          type: string
      responses:
        "200":
          description: "OK message"
          schema:
            $ref: "#/definitions/GeneralResponse"
        "404":
          description: "Zone not found"
      x-swagger-router-controller: "Zones"
  /zones/{id}/records:
    get:
      summary: "Returns the DNS records for a single zone"
      operationId: "getRecordsByZoneId"
      parameters:
        - name: id
          in: path
          description: "ID of the zone to add the record to"
          required: true
          type: string
      responses:
        "200":
          description: "A list of records for a single zone"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Record"
      x-swagger-router-controller: "Records"
    post:
      summary: "Add a new record to a zone"
      operationId: "addRecordForZoneId"
      parameters:
        - name: id
          in: path
          description: "ID of the zone to get the records from"
          required: true
          type: string
        - name: body
          in: body
          description: "Record to add"
          required: true
          schema:
            $ref: "#/definitions/Record"
      responses:
        "200":
          description: "Successfully added record"
      x-swagger-router-controller: "Records"
  /zones/{id}/records/delete:
    post:
      summary: "Delete a record from a zone"
      operationId: "deleteRecordForZoneId"
      parameters:
        - name: id
          in: path
          description: "ID of the zone to delete the record from"
          required: true
          type: string
        - name: body
          in: body
          description: "Record to delete"
          required: true
          schema:
            $ref: "#/definitions/Record"
      responses:
        "200":
          description: "Successfully deleted record"
      x-swagger-router-controller: "Records"
definitions:
  Configuration:
    type: "object"
    properties:
      dnsforwarders:
        type: "array"
        items: 
          type: "string"
        description: "Array of DNS Forwarders"
    example:
      dnsforwarders:
        - "192.168.0.1"
        - "192.168.0.2"
  Zone:
    type: "object"
    properties:
      name:
        type: "string"
      TTL:
        type: "integer"
        description: "Time in seconds"
      adminEmail:
        type: "string"
    example:
      name: "test.localhost"
      TTL: 3600
      adminEmail: "admin.test.localhost"
  NewZone:
    type: "object"
    properties:
      name:
        type: "string"
      TTL:
        type: "integer"
        description: "Time in seconds"
      adminEmail:
        type: "string"
      nsaddress:
        type: "string"
    example:
      name: "test.localhost"
      TTL: 3600
      adminEmail: "admin.test.localhost"
      nsaddress: '192.168.0.1'
  Record:
    type: "object"
    properties:
      name:
        type: "string"
      recordtype:
        type: "string"
      address:
        type: "string"
    example:
      name: "test.test.localhost"
      type: "A"
      address: "127.0.0.1"
  ErrorResponse:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  GeneralResponse:
    type: "object"
    required:
      - message
    properties:
      message:
        type: string    
    example:
      message: "Zone added OK"